<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>blog.weininger.net - Thomas Weininger</title><link>https://blog.weininger.net/</link><description></description><lastBuildDate>Sat, 13 Apr 2013 20:26:00 +0200</lastBuildDate><item><title>How to Write udev Rules for USB Devices</title><link>https://blog.weininger.net/how-to-write-udev-rules-for-usb-devices.html</link><description>&lt;p&gt;&lt;img alt="Udev-tux" src="https://upload.wikimedia.org/wikipedia/de/d/da/Udev-tux.png" /&gt;If you use a custom USB device for which there isn't a
suitable udev rule installed on your Linux system, you might notice that
only the root user has read and write access for it. In order to change that
you need to write a new udev rule. Here is …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Thomas Weininger</dc:creator><pubDate>Sat, 13 Apr 2013 20:26:00 +0200</pubDate><guid isPermaLink="false">tag:blog.weininger.net,2013-04-13:/how-to-write-udev-rules-for-usb-devices.html</guid><category>Free Software</category><category>Linux</category><category>udev</category><category>USB</category></item><item><title>NGINX Configuration for Gitweb and git-http-backend</title><link>https://blog.weininger.net/configuration-of-nginx-for-gitweb-and-git-http-backend.html</link><description>&lt;p&gt;Gitweb is a nice web interface for Git repositories. For instance go
to&amp;nbsp;&lt;a class="reference external" href="http://git.kernel.org/"&gt;http://git.kernel.org/&lt;/a&gt;&amp;nbsp;to see how it looks like. I find it useful
especially when I'm using the machine of somebody else and need to check out
some files from one of my own repositories. git-http-backend …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Thomas Weininger</dc:creator><pubDate>Sat, 15 Dec 2012 13:55:00 +0100</pubDate><guid isPermaLink="false">tag:blog.weininger.net,2012-12-15:/configuration-of-nginx-for-gitweb-and-git-http-backend.html</guid><category>Free Software</category><category>Development</category><category>Git</category><category>Linux</category></item><item><title>Streaming video files to Samsung TVs (Part 2)</title><link>https://blog.weininger.net/streaming-video-files-to-samsung-tvs-part-2.html</link><description>&lt;p&gt;The second (and final) part of my article series about streaming video
files to Samsung TVs describes which video and audio codecs as well as
which container formats to choose for playing back video files on
Samsung devices (tested with UE40D6200). Furthermore I'll show you a
Ruby program I wrote …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Thomas Weininger</dc:creator><pubDate>Fri, 15 Jun 2012 20:49:00 +0200</pubDate><guid isPermaLink="false">tag:blog.weininger.net,2012-06-15:/streaming-video-files-to-samsung-tvs-part-2.html</guid><category>Free Software</category><category>DLNA</category><category>Linux</category><category>Ruby</category><category>Samsung TV</category></item><item><title>How to keep apt-get and aptitude from switching repositories when upgrading a certain package</title><link>https://blog.weininger.net/how-to-keep-apt-get-and-aptitude-from-switching-repositories-when-upgrading-a-certain-package.html</link><description>&lt;p&gt;Today, after the usual&lt;/p&gt;
&lt;pre class="code text literal-block"&gt;
apt-get update; apt-get upgrade
&lt;/pre&gt;
&lt;p&gt;procedure on my Debian box, I noticed that FFMPEG wasn't working as
expected anymore. It happend that the upgrade installed a new version of
FFMPEG from the official Debian repositories, while I had used the
deb-multimedia.org repository for this package before …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Thomas Weininger</dc:creator><pubDate>Thu, 17 May 2012 18:30:00 +0200</pubDate><guid isPermaLink="false">tag:blog.weininger.net,2012-05-17:/how-to-keep-apt-get-and-aptitude-from-switching-repositories-when-upgrading-a-certain-package.html</guid><category>Free Software</category><category>APT</category><category>Debian</category><category>Linux</category></item><item><title>Streaming video files to Samsung TVs (Part 1)</title><link>https://blog.weininger.net/streaming-video-files-to-samsung-tvs-part-1.html</link><description>&lt;p&gt;&lt;a class="reference external image-reference" href="http://blog.weinimo.de/wp-content/uploads/2012/05/logo1.png"&gt;&lt;img alt="image0" src="http://blog.weinimo.de/wp-content/uploads/2012/05/logo1-300x79.png" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I have a huge video archive on my NAS and I wanted to be able to stream
the files to my Samsung TV UE40D6300 using its DLNA capability. Because
TVs in general and the DLNA standard especially do not support many
codecs it was clear to me that this goal …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Thomas Weininger</dc:creator><pubDate>Sat, 12 May 2012 18:31:00 +0200</pubDate><guid isPermaLink="false">tag:blog.weininger.net,2012-05-12:/streaming-video-files-to-samsung-tvs-part-1.html</guid><category>Free Software</category><category>DLNA</category><category>Linux</category><category>NAS</category><category>Samsung TV</category><category>Serviio</category></item></channel></rss>